{
    "schemes": [
        "http",
        "https"
    ],
    "swagger": "2.0",
    "info": {
        "description": "ML-Powered E-commerce Platform API with advanced recommendation system, intelligent search, and comprehensive analytics",
        "title": "Bachelor E-commerce API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@bachelor-ecommerce.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/api/v1",
    "paths": {
        "/auth/login": {
            "post": {
                "description": "Authenticate user with email and password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "User login",
                "parameters": [
                    {
                        "description": "Login credentials",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "schema": {
                            "$ref": "#/definitions/handlers.AuthResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request body or validation error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StandardErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Invalid email or password",
                        "schema": {
                            "$ref": "#/definitions/handlers.StandardErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StandardErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/profile": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get the authenticated user's comprehensive profile information including statistics and recent activity",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Get user profile",
                "responses": {
                    "200": {
                        "description": "User profile retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/handlers.UserProfileResponse"
                        }
                    },
                    "401": {
                        "description": "User not authenticated",
                        "schema": {
                            "$ref": "#/definitions/handlers.StandardErrorResponse"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/handlers.StandardErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update the authenticated user's profile information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Update user profile",
                "parameters": [
                    {
                        "description": "Profile update data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.UpdateProfileRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Profile updated successfully",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "400": {
                        "description": "Invalid request body or validation error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StandardErrorResponse"
                        }
                    },
                    "401": {
                        "description": "User not authenticated",
                        "schema": {
                            "$ref": "#/definitions/handlers.StandardErrorResponse"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/handlers.StandardErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StandardErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/register": {
            "post": {
                "description": "Create a new user account with email, name, and password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Register a new user",
                "parameters": [
                    {
                        "description": "Registration details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.RegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "User registered successfully",
                        "schema": {
                            "$ref": "#/definitions/handlers.AuthResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request body or validation error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StandardErrorResponse"
                        }
                    },
                    "409": {
                        "description": "User with this email already exists",
                        "schema": {
                            "$ref": "#/definitions/handlers.StandardErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StandardErrorResponse"
                        }
                    }
                }
            }
        },
        "/categories": {
            "get": {
                "description": "Retrieve a paginated list of all categories with product counts",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Categories"
                ],
                "summary": "Get all categories",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Items per page",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Categories retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/handlers.CategoriesListResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StandardErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new product category",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Categories"
                ],
                "summary": "Create a new category",
                "parameters": [
                    {
                        "description": "Category creation data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.CreateCategoryRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Category created successfully",
                        "schema": {
                            "$ref": "#/definitions/models.Category"
                        }
                    },
                    "400": {
                        "description": "Invalid request body or validation error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StandardErrorResponse"
                        }
                    },
                    "401": {
                        "description": "User not authenticated",
                        "schema": {
                            "$ref": "#/definitions/handlers.StandardErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Category with this name already exists",
                        "schema": {
                            "$ref": "#/definitions/handlers.StandardErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StandardErrorResponse"
                        }
                    }
                }
            }
        },
        "/categories/{id}": {
            "get": {
                "description": "Retrieve a specific category with its product count",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Categories"
                ],
                "summary": "Get category by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Category ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/handlers.CategoryResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid category ID",
                        "schema": {
                            "$ref": "#/definitions/handlers.StandardErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Category not found",
                        "schema": {
                            "$ref": "#/definitions/handlers.StandardErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update an existing category's information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Categories"
                ],
                "summary": "Update category",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Category ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Category update data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.UpdateCategoryRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category updated successfully",
                        "schema": {
                            "$ref": "#/definitions/models.Category"
                        }
                    },
                    "400": {
                        "description": "Invalid request body or validation error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StandardErrorResponse"
                        }
                    },
                    "401": {
                        "description": "User not authenticated",
                        "schema": {
                            "$ref": "#/definitions/handlers.StandardErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Category not found",
                        "schema": {
                            "$ref": "#/definitions/handlers.StandardErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Category with this name already exists",
                        "schema": {
                            "$ref": "#/definitions/handlers.StandardErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StandardErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete a category (only if it has no products)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Categories"
                ],
                "summary": "Delete category",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Category ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Category deleted successfully"
                    },
                    "400": {
                        "description": "Invalid category ID or category has products",
                        "schema": {
                            "$ref": "#/definitions/handlers.StandardErrorResponse"
                        }
                    },
                    "401": {
                        "description": "User not authenticated",
                        "schema": {
                            "$ref": "#/definitions/handlers.StandardErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Category not found",
                        "schema": {
                            "$ref": "#/definitions/handlers.StandardErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StandardErrorResponse"
                        }
                    }
                }
            }
        },
        "/comments": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new comment on a product",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Comments"
                ],
                "summary": "Create a comment",
                "parameters": [
                    {
                        "description": "Comment creation data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.CreateCommentRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Comment created successfully",
                        "schema": {
                            "$ref": "#/definitions/models.Comment"
                        }
                    },
                    "400": {
                        "description": "Invalid request body or validation error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StandardErrorResponse"
                        }
                    },
                    "401": {
                        "description": "User not authenticated",
                        "schema": {
                            "$ref": "#/definitions/handlers.StandardErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Product not found",
                        "schema": {
                            "$ref": "#/definitions/handlers.StandardErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StandardErrorResponse"
                        }
                    }
                }
            }
        },
        "/comments/my": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve a paginated list of comments by a specific user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Comments"
                ],
                "summary": "Get user's comments",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 20,
                        "description": "Items per page",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Comments retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/handlers.CommentsListResponse"
                        }
                    },
                    "401": {
                        "description": "User not authenticated",
                        "schema": {
                            "$ref": "#/definitions/handlers.StandardErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StandardErrorResponse"
                        }
                    }
                }
            }
        },
        "/comments/product/{product_id}": {
            "get": {
                "description": "Get paginated comments for a specific product with optional user vote information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Comments"
                ],
                "summary": "Get product comments",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Product ID",
                        "name": "product_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 20,
                        "description": "Items per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "\"created_at\"",
                        "description": "Sort by (created_at, upvotes, downvotes)",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "\"desc\"",
                        "description": "Sort order (asc, desc)",
                        "name": "sort_order",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Comments retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/handlers.CommentsListResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid product ID",
                        "schema": {
                            "$ref": "#/definitions/handlers.StandardErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StandardErrorResponse"
                        }
                    }
                }
            }
        },
        "/comments/stats": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get statistics about comments (for admin or analytics)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Comments"
                ],
                "summary": "Get comment statistics",
                "responses": {
                    "200": {
                        "description": "Comment statistics",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "User not authenticated",
                        "schema": {
                            "$ref": "#/definitions/handlers.StandardErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StandardErrorResponse"
                        }
                    }
                }
            }
        },
        "/comments/{id}": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update an existing comment (only by the author)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Comments"
                ],
                "summary": "Update comment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Comment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Comment update data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.UpdateCommentRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Comment updated successfully",
                        "schema": {
                            "$ref": "#/definitions/models.Comment"
                        }
                    },
                    "400": {
                        "description": "Invalid request body or validation error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StandardErrorResponse"
                        }
                    },
                    "401": {
                        "description": "User not authenticated",
                        "schema": {
                            "$ref": "#/definitions/handlers.StandardErrorResponse"
                        }
                    },
                    "403": {
                        "description": "User not authorized to update this comment",
                        "schema": {
                            "$ref": "#/definitions/handlers.StandardErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Comment not found",
                        "schema": {
                            "$ref": "#/definitions/handlers.StandardErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StandardErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete a comment (only by the author or admin)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Comments"
                ],
                "summary": "Delete comment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Comment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Comment deleted successfully"
                    },
                    "400": {
                        "description": "Invalid comment ID",
                        "schema": {
                            "$ref": "#/definitions/handlers.StandardErrorResponse"
                        }
                    },
                    "401": {
                        "description": "User not authenticated",
                        "schema": {
                            "$ref": "#/definitions/handlers.StandardErrorResponse"
                        }
                    },
                    "403": {
                        "description": "User not authorized to delete this comment",
                        "schema": {
                            "$ref": "#/definitions/handlers.StandardErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Comment not found",
                        "schema": {
                            "$ref": "#/definitions/handlers.StandardErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StandardErrorResponse"
                        }
                    }
                }
            }
        },
        "/comments/{id}/vote": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Vote up or down on a comment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Comments"
                ],
                "summary": "Vote on comment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Comment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Vote data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.VoteCommentRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Vote recorded successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid request body or validation error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StandardErrorResponse"
                        }
                    },
                    "401": {
                        "description": "User not authenticated",
                        "schema": {
                            "$ref": "#/definitions/handlers.StandardErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Comment not found",
                        "schema": {
                            "$ref": "#/definitions/handlers.StandardErrorResponse"
                        }
                    },
                    "409": {
                        "description": "User already voted on this comment",
                        "schema": {
                            "$ref": "#/definitions/handlers.StandardErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StandardErrorResponse"
                        }
                    }
                }
            }
        },
        "/favorites": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve a paginated list of user's favorite products",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Favorites"
                ],
                "summary": "Get user's favorites",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 20,
                        "description": "Items per page",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Favorites retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/handlers.FavoritesListResponse"
                        }
                    },
                    "401": {
                        "description": "User not authenticated",
                        "schema": {
                            "$ref": "#/definitions/handlers.StandardErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StandardErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Add a product to the authenticated user's favorites",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Favorites"
                ],
                "summary": "Add product to favorites",
                "parameters": [
                    {
                        "description": "Product to add to favorites",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.AddFavoriteRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Product added to favorites successfully",
                        "schema": {
                            "$ref": "#/definitions/models.Favorite"
                        }
                    },
                    "400": {
                        "description": "Invalid request body or validation error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StandardErrorResponse"
                        }
                    },
                    "401": {
                        "description": "User not authenticated",
                        "schema": {
                            "$ref": "#/definitions/handlers.StandardErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Product not found",
                        "schema": {
                            "$ref": "#/definitions/handlers.StandardErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Product already in favorites",
                        "schema": {
                            "$ref": "#/definitions/handlers.StandardErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StandardErrorResponse"
                        }
                    }
                }
            }
        },
        "/favorites/stats": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get statistics about the authenticated user's favorites",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Favorites"
                ],
                "summary": "Get favorite statistics",
                "responses": {
                    "200": {
                        "description": "Favorite statistics",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "User not authenticated",
                        "schema": {
                            "$ref": "#/definitions/handlers.StandardErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StandardErrorResponse"
                        }
                    }
                }
            }
        },
        "/favorites/{product_id}": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Remove a product from the authenticated user's favorites",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Favorites"
                ],
                "summary": "Remove product from favorites",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Product ID",
                        "name": "product_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Product removed from favorites successfully"
                    },
                    "400": {
                        "description": "Invalid product ID",
                        "schema": {
                            "$ref": "#/definitions/handlers.StandardErrorResponse"
                        }
                    },
                    "401": {
                        "description": "User not authenticated",
                        "schema": {
                            "$ref": "#/definitions/handlers.StandardErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Favorite not found",
                        "schema": {
                            "$ref": "#/definitions/handlers.StandardErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StandardErrorResponse"
                        }
                    }
                }
            }
        },
        "/favorites/{product_id}/check": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Check if a specific product is in the authenticated user's favorites",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Favorites"
                ],
                "summary": "Check if product is favorited",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Product ID",
                        "name": "product_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Favorite status",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "boolean"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid product ID",
                        "schema": {
                            "$ref": "#/definitions/handlers.StandardErrorResponse"
                        }
                    },
                    "401": {
                        "description": "User not authenticated",
                        "schema": {
                            "$ref": "#/definitions/handlers.StandardErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StandardErrorResponse"
                        }
                    }
                }
            }
        },
        "/favorites/{product_id}/toggle": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Add or remove a product from favorites based on current status",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Favorites"
                ],
                "summary": "Toggle favorite status",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Product ID",
                        "name": "product_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Toggle result",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid product ID",
                        "schema": {
                            "$ref": "#/definitions/handlers.StandardErrorResponse"
                        }
                    },
                    "401": {
                        "description": "User not authenticated",
                        "schema": {
                            "$ref": "#/definitions/handlers.StandardErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Product not found",
                        "schema": {
                            "$ref": "#/definitions/handlers.StandardErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StandardErrorResponse"
                        }
                    }
                }
            }
        },
        "/product-suggestions": {
            "get": {
                "description": "Retrieve a paginated list of ML-generated product suggestions with optional filtering",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product Suggestions"
                ],
                "summary": "Get product suggestions",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 20,
                        "description": "Items per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by product ID",
                        "name": "product_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by model version",
                        "name": "model_version",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Filter suggestions with price minimum",
                        "name": "has_price_min",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Filter suggestions with price maximum",
                        "name": "has_price_max",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Filter suggestions with tags",
                        "name": "has_tags",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Suggestions retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/handlers.ProductSuggestionsListResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StandardErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new ML-generated suggestion for a product (admin only)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product Suggestions"
                ],
                "summary": "Create product suggestion",
                "parameters": [
                    {
                        "description": "Suggestion creation data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.CreateProductSuggestionRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Suggestion created successfully",
                        "schema": {
                            "$ref": "#/definitions/models.ProductSuggestion"
                        }
                    },
                    "400": {
                        "description": "Invalid request body or validation error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StandardErrorResponse"
                        }
                    },
                    "401": {
                        "description": "User not authenticated",
                        "schema": {
                            "$ref": "#/definitions/handlers.StandardErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Admin access required",
                        "schema": {
                            "$ref": "#/definitions/handlers.StandardErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Product not found",
                        "schema": {
                            "$ref": "#/definitions/handlers.StandardErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StandardErrorResponse"
                        }
                    }
                }
            }
        },
        "/product-suggestions/generate/{id}": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Generate ML suggestions for a specific product using the ML service",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product Suggestions"
                ],
                "summary": "Generate suggestions for product",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Product ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Suggestions generated successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid product ID",
                        "schema": {
                            "$ref": "#/definitions/handlers.StandardErrorResponse"
                        }
                    },
                    "401": {
                        "description": "User not authenticated",
                        "schema": {
                            "$ref": "#/definitions/handlers.StandardErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Admin access required",
                        "schema": {
                            "$ref": "#/definitions/handlers.StandardErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Product not found",
                        "schema": {
                            "$ref": "#/definitions/handlers.StandardErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StandardErrorResponse"
                        }
                    }
                }
            }
        },
        "/product-suggestions/stats": {
            "get": {
                "description": "Get statistics about ML-generated product suggestions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product Suggestions"
                ],
                "summary": "Get suggestion statistics",
                "responses": {
                    "200": {
                        "description": "Suggestion statistics",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StandardErrorResponse"
                        }
                    }
                }
            }
        },
        "/product-suggestions/{id}": {
            "get": {
                "description": "Retrieve a specific ML-generated product suggestion",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product Suggestions"
                ],
                "summary": "Get product suggestion by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Suggestion ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Suggestion retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/handlers.ProductSuggestionResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid suggestion ID",
                        "schema": {
                            "$ref": "#/definitions/handlers.StandardErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Suggestion not found",
                        "schema": {
                            "$ref": "#/definitions/handlers.StandardErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StandardErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update an existing ML-generated product suggestion (admin only)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product Suggestions"
                ],
                "summary": "Update product suggestion",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Suggestion ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Suggestion update data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.UpdateProductSuggestionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Suggestion updated successfully",
                        "schema": {
                            "$ref": "#/definitions/models.ProductSuggestion"
                        }
                    },
                    "400": {
                        "description": "Invalid request body or validation error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StandardErrorResponse"
                        }
                    },
                    "401": {
                        "description": "User not authenticated",
                        "schema": {
                            "$ref": "#/definitions/handlers.StandardErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Admin access required",
                        "schema": {
                            "$ref": "#/definitions/handlers.StandardErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Suggestion not found",
                        "schema": {
                            "$ref": "#/definitions/handlers.StandardErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StandardErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete an ML-generated product suggestion (admin only)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product Suggestions"
                ],
                "summary": "Delete product suggestion",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Suggestion ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Suggestion deleted successfully"
                    },
                    "400": {
                        "description": "Invalid suggestion ID",
                        "schema": {
                            "$ref": "#/definitions/handlers.StandardErrorResponse"
                        }
                    },
                    "401": {
                        "description": "User not authenticated",
                        "schema": {
                            "$ref": "#/definitions/handlers.StandardErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Admin access required",
                        "schema": {
                            "$ref": "#/definitions/handlers.StandardErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Suggestion not found",
                        "schema": {
                            "$ref": "#/definitions/handlers.StandardErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StandardErrorResponse"
                        }
                    }
                }
            }
        },
        "/products": {
            "get": {
                "description": "Retrieve a paginated list of products with optional filtering",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Products"
                ],
                "summary": "Get products",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 20,
                        "description": "Items per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search in name and description",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by category ID",
                        "name": "category_id",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "description": "Minimum price filter",
                        "name": "min_price",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "description": "Maximum price filter",
                        "name": "max_price",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by tags (comma-separated)",
                        "name": "tags",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by creator user ID",
                        "name": "created_by",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Products retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/handlers.ProductsListResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StandardErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new product",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Products"
                ],
                "summary": "Create a new product",
                "parameters": [
                    {
                        "description": "Product creation data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.CreateProductRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Product created successfully",
                        "schema": {
                            "$ref": "#/definitions/models.Product"
                        }
                    },
                    "400": {
                        "description": "Invalid request body or validation error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StandardErrorResponse"
                        }
                    },
                    "401": {
                        "description": "User not authenticated",
                        "schema": {
                            "$ref": "#/definitions/handlers.StandardErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StandardErrorResponse"
                        }
                    }
                }
            }
        },
        "/products/search": {
            "post": {
                "description": "Perform advanced search with multiple filters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Products"
                ],
                "summary": "Search products",
                "parameters": [
                    {
                        "description": "Search parameters",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.ProductSearchRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search results",
                        "schema": {
                            "$ref": "#/definitions/handlers.ProductsListResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request body or validation error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StandardErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StandardErrorResponse"
                        }
                    }
                }
            }
        },
        "/products/suggest": {
            "post": {
                "description": "Generate real-time product suggestions including price estimation, tag recommendations, and similar products without storing in database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Products"
                ],
                "summary": "Get on-demand product suggestions",
                "parameters": [
                    {
                        "description": "Product information for analysis",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.ProductSuggestionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product suggestions generated successfully",
                        "schema": {
                            "$ref": "#/definitions/handlers.OnDemandProductSuggestionResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request body or validation error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StandardErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StandardErrorResponse"
                        }
                    }
                }
            }
        },
        "/products/{id}": {
            "get": {
                "description": "Retrieve a specific product with detailed information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Products"
                ],
                "summary": "Get product by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Product ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/handlers.ProductResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid product ID",
                        "schema": {
                            "$ref": "#/definitions/handlers.StandardErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Product not found",
                        "schema": {
                            "$ref": "#/definitions/handlers.StandardErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update an existing product's information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Products"
                ],
                "summary": "Update product",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Product ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Product update data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.UpdateProductRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product updated successfully",
                        "schema": {
                            "$ref": "#/definitions/models.Product"
                        }
                    },
                    "400": {
                        "description": "Invalid request body or validation error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StandardErrorResponse"
                        }
                    },
                    "401": {
                        "description": "User not authenticated",
                        "schema": {
                            "$ref": "#/definitions/handlers.StandardErrorResponse"
                        }
                    },
                    "403": {
                        "description": "User not authorized to update this product",
                        "schema": {
                            "$ref": "#/definitions/handlers.StandardErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Product not found",
                        "schema": {
                            "$ref": "#/definitions/handlers.StandardErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StandardErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete a product (only by creator or admin)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Products"
                ],
                "summary": "Delete product",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Product ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Product deleted successfully"
                    },
                    "400": {
                        "description": "Invalid product ID",
                        "schema": {
                            "$ref": "#/definitions/handlers.StandardErrorResponse"
                        }
                    },
                    "401": {
                        "description": "User not authenticated",
                        "schema": {
                            "$ref": "#/definitions/handlers.StandardErrorResponse"
                        }
                    },
                    "403": {
                        "description": "User not authorized to delete this product",
                        "schema": {
                            "$ref": "#/definitions/handlers.StandardErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Product not found",
                        "schema": {
                            "$ref": "#/definitions/handlers.StandardErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StandardErrorResponse"
                        }
                    }
                }
            }
        },
        "/recommendations": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve personalized product recommendations for the authenticated user with optional deal information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Recommendations"
                ],
                "summary": "Get user recommendations with deals",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Items per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "collaborative",
                            "content",
                            "demographic",
                            "hybrid"
                        ],
                        "type": "string",
                        "default": "hybrid",
                        "description": "Recommendation strategy",
                        "name": "strategy",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "default": false,
                        "description": "Include personalized deals",
                        "name": "include_deals",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Recommendations retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/handlers.RecommendationsListResponse"
                        }
                    },
                    "401": {
                        "description": "User not authenticated",
                        "schema": {
                            "$ref": "#/definitions/handlers.StandardErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StandardErrorResponse"
                        }
                    }
                }
            }
        },
        "/recommendations/generate": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Generate fresh recommendations using the ML service with optional deals",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Recommendations"
                ],
                "summary": "Generate new recommendations",
                "parameters": [
                    {
                        "description": "Recommendation parameters",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.RecommendationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Recommendations generated successfully",
                        "schema": {
                            "$ref": "#/definitions/handlers.RecommendationsListResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request body or validation error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StandardErrorResponse"
                        }
                    },
                    "401": {
                        "description": "User not authenticated",
                        "schema": {
                            "$ref": "#/definitions/handlers.StandardErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StandardErrorResponse"
                        }
                    }
                }
            }
        },
        "/recommendations/stats": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get statistics about user's recommendations",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Recommendations"
                ],
                "summary": "Get recommendation statistics",
                "responses": {
                    "200": {
                        "description": "Recommendation statistics",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "User not authenticated",
                        "schema": {
                            "$ref": "#/definitions/handlers.StandardErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StandardErrorResponse"
                        }
                    }
                }
            }
        },
        "/recommendations/stored": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve previously generated recommendations from database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Recommendations"
                ],
                "summary": "Get stored recommendations",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Items per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by strategy",
                        "name": "strategy",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Stored recommendations retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/handlers.RecommendationsListResponse"
                        }
                    },
                    "401": {
                        "description": "User not authenticated",
                        "schema": {
                            "$ref": "#/definitions/handlers.StandardErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StandardErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "handlers.AddFavoriteRequest": {
            "type": "object",
            "required": [
                "product_id"
            ],
            "properties": {
                "product_id": {
                    "type": "string",
                    "example": "123e4567-e89b-12d3-a456-426614174000"
                }
            }
        },
        "handlers.AuthResponse": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                },
                "user": {
                    "$ref": "#/definitions/models.User"
                }
            }
        },
        "handlers.CategoriesListResponse": {
            "type": "object",
            "properties": {
                "categories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handlers.CategoryResponse"
                    }
                },
                "limit": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "handlers.CategoryResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "product_count": {
                    "type": "integer"
                },
                "products": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Product"
                    }
                }
            }
        },
        "handlers.CommentResponse": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "string"
                },
                "comment_votes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.CommentVote"
                    }
                },
                "created_at": {
                    "type": "string"
                },
                "downvotes": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "net_votes": {
                    "description": "upvotes - downvotes",
                    "type": "integer"
                },
                "product": {
                    "$ref": "#/definitions/models.Product"
                },
                "product_id": {
                    "type": "string"
                },
                "sentiment_label": {
                    "type": "string"
                },
                "sentiment_score": {
                    "type": "number"
                },
                "upvotes": {
                    "type": "integer"
                },
                "user": {
                    "$ref": "#/definitions/models.User"
                },
                "user_id": {
                    "type": "string"
                },
                "user_vote": {
                    "description": "\"up\", \"down\", or null",
                    "type": "string"
                }
            }
        },
        "handlers.CommentsListResponse": {
            "type": "object",
            "properties": {
                "comments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handlers.CommentResponse"
                    }
                },
                "limit": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "handlers.CreateCategoryRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 2,
                    "example": "Electronics"
                }
            }
        },
        "handlers.CreateCommentRequest": {
            "type": "object",
            "required": [
                "body",
                "product_id"
            ],
            "properties": {
                "body": {
                    "type": "string",
                    "maxLength": 2000,
                    "minLength": 1,
                    "example": "Great product! Highly recommended."
                },
                "product_id": {
                    "type": "string",
                    "example": "123e4567-e89b-12d3-a456-426614174000"
                }
            }
        },
        "handlers.CreateProductRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "category_id": {
                    "type": "string",
                    "example": "123e4567-e89b-12d3-a456-426614174000"
                },
                "description": {
                    "type": "string",
                    "maxLength": 2000,
                    "example": "Latest iPhone with advanced features"
                },
                "name": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 2,
                    "example": "iPhone 15 Pro"
                },
                "price": {
                    "type": "number",
                    "minimum": 0,
                    "example": 999.99
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "[\"smartphone\"",
                        " \"apple\"",
                        " \"premium\"]"
                    ]
                }
            }
        },
        "handlers.CreateProductSuggestionRequest": {
            "type": "object",
            "required": [
                "product_id"
            ],
            "properties": {
                "model_version": {
                    "type": "string",
                    "maxLength": 100,
                    "example": "v1.0"
                },
                "product_id": {
                    "type": "string",
                    "example": "123e4567-e89b-12d3-a456-426614174000"
                },
                "reason": {
                    "type": "string",
                    "maxLength": 500,
                    "example": "Price optimization based on market analysis"
                },
                "suggested_price_max": {
                    "type": "number",
                    "minimum": 0,
                    "example": 199.99
                },
                "suggested_price_min": {
                    "type": "number",
                    "minimum": 0,
                    "example": 99.99
                },
                "suggested_tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "[\"smartphone\"",
                        " \"premium\"",
                        " \"latest\"]"
                    ]
                }
            }
        },
        "handlers.DealInfo": {
            "type": "object",
            "properties": {
                "deal_expiry": {
                    "type": "string"
                },
                "deal_price": {
                    "type": "number"
                },
                "deal_reason": {
                    "type": "string"
                },
                "discount_percentage": {
                    "type": "number"
                },
                "is_limited_time": {
                    "type": "boolean"
                },
                "is_regional_deal": {
                    "type": "boolean"
                },
                "original_price": {
                    "type": "number"
                }
            }
        },
        "handlers.DealsSummary": {
            "type": "object",
            "properties": {
                "average_discount": {
                    "type": "number"
                },
                "personalized_deals": {
                    "type": "integer"
                },
                "regional_deals": {
                    "type": "integer"
                },
                "total_deals": {
                    "type": "integer"
                },
                "total_savings": {
                    "type": "number"
                }
            }
        },
        "handlers.FavoriteResponse": {
            "type": "object",
            "properties": {
                "favorited_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "product": {
                    "$ref": "#/definitions/handlers.ProductResponse"
                },
                "product_id": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/models.User"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "handlers.FavoritesListResponse": {
            "type": "object",
            "properties": {
                "favorites": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handlers.FavoriteResponse"
                    }
                },
                "limit": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "handlers.LoginRequest": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "user@example.com"
                },
                "password": {
                    "type": "string",
                    "maxLength": 128,
                    "minLength": 1,
                    "example": "password123"
                }
            }
        },
        "handlers.OnDemandProductSuggestionResponse": {
            "type": "object",
            "properties": {
                "analysis_summary": {
                    "type": "string"
                },
                "confidence": {
                    "type": "number"
                },
                "model_version": {
                    "type": "string"
                },
                "processing_time": {
                    "type": "string"
                },
                "recommended_tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handlers.RecommendedTag"
                    }
                },
                "similar_products": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handlers.SimilarProductInfo"
                    }
                },
                "suggested_price_range": {
                    "$ref": "#/definitions/handlers.SuggestedPriceRange"
                }
            }
        },
        "handlers.ProductFilters": {
            "type": "object",
            "properties": {
                "category_id": {
                    "type": "string"
                },
                "created_by": {
                    "type": "string"
                },
                "max_price": {
                    "type": "number"
                },
                "min_price": {
                    "type": "number"
                },
                "search": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "handlers.ProductResponse": {
            "description": "Product response with enhanced information",
            "type": "object",
            "properties": {
                "average_rating": {
                    "type": "number"
                },
                "category": {
                    "$ref": "#/definitions/models.Category"
                },
                "category_id": {
                    "type": "string"
                },
                "comment_count": {
                    "type": "integer"
                },
                "comments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Comment"
                    }
                },
                "comments_count": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "string"
                },
                "creator": {
                    "$ref": "#/definitions/models.User"
                },
                "curated_price": {
                    "type": "number"
                },
                "curated_tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "description": {
                    "type": "string"
                },
                "favorite_count": {
                    "description": "Additional fields from products handler",
                    "type": "integer"
                },
                "favorites": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Favorite"
                    }
                },
                "favorites_count": {
                    "type": "integer"
                },
                "feature_vector": {
                    "$ref": "#/definitions/models.ProductFeatureVector"
                },
                "has_suggestions": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "is_favorited": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "product_suggestions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ProductSuggestion"
                    }
                },
                "recommendations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Recommendation"
                    }
                },
                "recommended_reason": {
                    "type": "string"
                },
                "similar_products": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Product"
                    }
                },
                "similarity_data_as_product": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ProductSimilarityData"
                    }
                },
                "similarity_data_as_similar": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ProductSimilarityData"
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "user_events": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.UserEvent"
                    }
                }
            }
        },
        "handlers.ProductSearchRequest": {
            "type": "object",
            "required": [
                "query"
            ],
            "properties": {
                "category_id": {
                    "type": "string",
                    "example": "123e4567-e89b-12d3-a456-426614174000"
                },
                "limit": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1,
                    "example": 20
                },
                "max_price": {
                    "type": "number",
                    "minimum": 0,
                    "example": 1000
                },
                "min_price": {
                    "type": "number",
                    "minimum": 0,
                    "example": 100
                },
                "page": {
                    "type": "integer",
                    "minimum": 1,
                    "example": 1
                },
                "query": {
                    "type": "string",
                    "minLength": 1,
                    "example": "smartphone"
                },
                "sort_by": {
                    "type": "string",
                    "enum": [
                        "price",
                        "created_at"
                    ],
                    "example": "price"
                },
                "sort_order": {
                    "type": "string",
                    "enum": [
                        "asc",
                        "desc"
                    ],
                    "example": "asc"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "[\"premium\"",
                        " \"bestseller\"]"
                    ]
                }
            }
        },
        "handlers.ProductSuggestionRequest": {
            "type": "object",
            "required": [
                "description",
                "name"
            ],
            "properties": {
                "brand": {
                    "type": "string",
                    "maxLength": 100,
                    "example": "Apple"
                },
                "category": {
                    "type": "string",
                    "maxLength": 100,
                    "example": "Electronics"
                },
                "description": {
                    "type": "string",
                    "maxLength": 2000,
                    "minLength": 10,
                    "example": "Latest flagship smartphone with advanced camera system and A17 Pro chip"
                },
                "name": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 2,
                    "example": "iPhone 15 Pro Max"
                }
            }
        },
        "handlers.ProductSuggestionResponse": {
            "type": "object",
            "properties": {
                "generated_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "model_version": {
                    "type": "string"
                },
                "product": {
                    "$ref": "#/definitions/models.Product"
                },
                "product_id": {
                    "type": "string"
                },
                "reason": {
                    "type": "string"
                },
                "suggested_price_max": {
                    "type": "number"
                },
                "suggested_price_min": {
                    "type": "number"
                },
                "suggested_tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "handlers.ProductSuggestionsListResponse": {
            "type": "object",
            "properties": {
                "filters": {
                    "$ref": "#/definitions/handlers.SuggestionFilters"
                },
                "limit": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer"
                },
                "suggestions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handlers.ProductSuggestionResponse"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "handlers.ProductsListResponse": {
            "type": "object",
            "properties": {
                "filters": {
                    "$ref": "#/definitions/handlers.ProductFilters"
                },
                "limit": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer"
                },
                "products": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handlers.ProductResponse"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "handlers.RecommendationRequest": {
            "type": "object",
            "properties": {
                "include_deals": {
                    "type": "boolean",
                    "example": true
                },
                "num_recommendations": {
                    "type": "integer",
                    "maximum": 50,
                    "minimum": 1,
                    "example": 10
                },
                "strategy": {
                    "type": "string",
                    "enum": [
                        "collaborative",
                        "content",
                        "demographic",
                        "hybrid"
                    ],
                    "example": "hybrid"
                }
            }
        },
        "handlers.RecommendationResponse": {
            "type": "object",
            "properties": {
                "affinity_score": {
                    "type": "number"
                },
                "age_based": {
                    "type": "boolean"
                },
                "based_on_comments": {
                    "type": "boolean"
                },
                "based_on_favorites": {
                    "type": "boolean"
                },
                "created_at": {
                    "type": "string"
                },
                "deal_info": {
                    "$ref": "#/definitions/handlers.DealInfo"
                },
                "id": {
                    "type": "string"
                },
                "model_version": {
                    "type": "string"
                },
                "product": {
                    "$ref": "#/definitions/handlers.ProductResponse"
                },
                "product_id": {
                    "type": "string"
                },
                "reason": {
                    "type": "string"
                },
                "reason_details": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "region_based": {
                    "type": "boolean"
                },
                "user": {
                    "$ref": "#/definitions/models.User"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "handlers.RecommendationsListResponse": {
            "type": "object",
            "properties": {
                "deals": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handlers.RecommendationResponse"
                    }
                },
                "deals_summary": {
                    "$ref": "#/definitions/handlers.DealsSummary"
                },
                "limit": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer"
                },
                "recommendations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handlers.RecommendationResponse"
                    }
                },
                "strategy": {
                    "type": "string"
                },
                "total": {
                    "type": "integer"
                },
                "user_profile": {
                    "type": "object",
                    "additionalProperties": true
                }
            }
        },
        "handlers.RecommendedTag": {
            "type": "object",
            "properties": {
                "confidence": {
                    "type": "number"
                },
                "reasoning": {
                    "type": "string"
                },
                "tag": {
                    "type": "string"
                }
            }
        },
        "handlers.RegisterRequest": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "birth_year": {
                    "type": "integer",
                    "maximum": 2024,
                    "minimum": 1900,
                    "example": 1990
                },
                "email": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "user@example.com"
                },
                "name": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 2,
                    "example": "John Doe"
                },
                "password": {
                    "type": "string",
                    "maxLength": 128,
                    "minLength": 8,
                    "example": "password123"
                },
                "region": {
                    "type": "string",
                    "maxLength": 100,
                    "example": "US"
                }
            }
        },
        "handlers.SimilarProductInfo": {
            "type": "object",
            "properties": {
                "category": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "product_id": {
                    "type": "string"
                },
                "similarity_reason": {
                    "type": "string"
                },
                "similarity_score": {
                    "type": "number"
                }
            }
        },
        "handlers.StandardErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "handlers.SuggestedPriceRange": {
            "type": "object",
            "properties": {
                "confidence": {
                    "type": "number"
                },
                "max_price": {
                    "type": "number"
                },
                "min_price": {
                    "type": "number"
                },
                "reasoning": {
                    "type": "string"
                }
            }
        },
        "handlers.SuggestionFilters": {
            "type": "object",
            "properties": {
                "has_price_max": {
                    "type": "boolean"
                },
                "has_price_min": {
                    "type": "boolean"
                },
                "has_tags": {
                    "type": "boolean"
                },
                "model_version": {
                    "type": "string"
                },
                "product_id": {
                    "type": "string"
                }
            }
        },
        "handlers.UpdateCategoryRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 2,
                    "example": "Electronics"
                }
            }
        },
        "handlers.UpdateCommentRequest": {
            "type": "object",
            "required": [
                "body"
            ],
            "properties": {
                "body": {
                    "type": "string",
                    "maxLength": 2000,
                    "minLength": 1,
                    "example": "Updated comment text"
                }
            }
        },
        "handlers.UpdateProductRequest": {
            "type": "object",
            "properties": {
                "category_id": {
                    "type": "string",
                    "example": "123e4567-e89b-12d3-a456-426614174000"
                },
                "curated_price": {
                    "type": "number",
                    "minimum": 0,
                    "example": 899.99
                },
                "curated_tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "[\"smartphone\"",
                        " \"premium\"",
                        " \"bestseller\"]"
                    ]
                },
                "description": {
                    "type": "string",
                    "maxLength": 2000,
                    "example": "Latest iPhone with advanced features"
                },
                "name": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 2,
                    "example": "iPhone 15 Pro"
                },
                "price": {
                    "type": "number",
                    "minimum": 0,
                    "example": 999.99
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "[\"smartphone\"",
                        " \"apple\"",
                        " \"premium\"]"
                    ]
                }
            }
        },
        "handlers.UpdateProductSuggestionRequest": {
            "type": "object",
            "properties": {
                "model_version": {
                    "type": "string",
                    "maxLength": 100,
                    "example": "v1.0"
                },
                "reason": {
                    "type": "string",
                    "maxLength": 500,
                    "example": "Updated price optimization"
                },
                "suggested_price_max": {
                    "type": "number",
                    "minimum": 0,
                    "example": 199.99
                },
                "suggested_price_min": {
                    "type": "number",
                    "minimum": 0,
                    "example": 99.99
                },
                "suggested_tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "[\"smartphone\"",
                        " \"premium\"",
                        " \"latest\"]"
                    ]
                }
            }
        },
        "handlers.UpdateProfileRequest": {
            "type": "object",
            "properties": {
                "birth_year": {
                    "type": "integer",
                    "maximum": 2024,
                    "minimum": 1900,
                    "example": 1990
                },
                "name": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 2,
                    "example": "John Doe"
                },
                "region": {
                    "type": "string",
                    "maxLength": 100,
                    "example": "US"
                }
            }
        },
        "handlers.UserProfileResponse": {
            "type": "object",
            "properties": {
                "birth_year": {
                    "type": "integer"
                },
                "comment_votes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.CommentVote"
                    }
                },
                "comments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Comment"
                    }
                },
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "favorites": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Favorite"
                    }
                },
                "http_request_logs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.HttpRequestLog"
                    }
                },
                "id": {
                    "type": "string"
                },
                "is_admin": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "recommendations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Recommendation"
                    }
                },
                "region": {
                    "type": "string"
                },
                "statistics": {
                    "$ref": "#/definitions/handlers.UserProfileStatistics"
                },
                "user_events": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.UserEvent"
                    }
                }
            }
        },
        "handlers.UserProfileStatistics": {
            "type": "object",
            "properties": {
                "average_order_value": {
                    "type": "number"
                },
                "cart_items_count": {
                    "type": "integer"
                },
                "cart_total_value": {
                    "type": "number"
                },
                "favorite_category": {
                    "type": "string"
                },
                "recommendations_clicked": {
                    "type": "integer"
                },
                "recommendations_received": {
                    "type": "integer"
                },
                "total_interactions": {
                    "type": "integer"
                },
                "total_orders": {
                    "type": "integer"
                },
                "total_spent": {
                    "type": "number"
                }
            }
        },
        "handlers.VoteCommentRequest": {
            "type": "object",
            "required": [
                "vote_type"
            ],
            "properties": {
                "vote_type": {
                    "type": "string",
                    "enum": [
                        "up",
                        "down"
                    ],
                    "example": "up"
                }
            }
        },
        "models.Category": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "products": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Product"
                    }
                }
            }
        },
        "models.Comment": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "string"
                },
                "comment_votes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.CommentVote"
                    }
                },
                "created_at": {
                    "type": "string"
                },
                "downvotes": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "product": {
                    "$ref": "#/definitions/models.Product"
                },
                "product_id": {
                    "type": "string"
                },
                "sentiment_label": {
                    "type": "string"
                },
                "sentiment_score": {
                    "type": "number"
                },
                "upvotes": {
                    "type": "integer"
                },
                "user": {
                    "$ref": "#/definitions/models.User"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "models.CommentVote": {
            "type": "object",
            "properties": {
                "comment": {
                    "$ref": "#/definitions/models.Comment"
                },
                "comment_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/models.User"
                },
                "user_id": {
                    "type": "string"
                },
                "vote_type": {
                    "type": "string"
                }
            }
        },
        "models.Favorite": {
            "type": "object",
            "properties": {
                "favorited_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "product": {
                    "$ref": "#/definitions/models.Product"
                },
                "product_id": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/models.User"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "models.HttpRequestLog": {
            "type": "object",
            "properties": {
                "attack_score": {
                    "type": "number"
                },
                "duration_ms": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "ip_address": {
                    "type": "string"
                },
                "method": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "referrer": {
                    "type": "string"
                },
                "status_code": {
                    "type": "integer"
                },
                "suspected_attack_type": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/models.User"
                },
                "user_agent": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "models.Product": {
            "type": "object",
            "properties": {
                "category": {
                    "$ref": "#/definitions/models.Category"
                },
                "category_id": {
                    "type": "string"
                },
                "comments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Comment"
                    }
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "string"
                },
                "creator": {
                    "$ref": "#/definitions/models.User"
                },
                "curated_price": {
                    "type": "number"
                },
                "curated_tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "description": {
                    "type": "string"
                },
                "favorites": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Favorite"
                    }
                },
                "feature_vector": {
                    "$ref": "#/definitions/models.ProductFeatureVector"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "product_suggestions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ProductSuggestion"
                    }
                },
                "recommendations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Recommendation"
                    }
                },
                "similarity_data_as_product": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ProductSimilarityData"
                    }
                },
                "similarity_data_as_similar": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ProductSimilarityData"
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "user_events": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.UserEvent"
                    }
                }
            }
        },
        "models.ProductFeatureVector": {
            "type": "object",
            "properties": {
                "embedding": {
                    "type": "array",
                    "items": {
                        "type": "number"
                    }
                },
                "product": {
                    "$ref": "#/definitions/models.Product"
                },
                "product_id": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.ProductSimilarityData": {
            "type": "object",
            "properties": {
                "based_on": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "product": {
                    "$ref": "#/definitions/models.Product"
                },
                "product_id": {
                    "type": "string"
                },
                "similar_product": {
                    "$ref": "#/definitions/models.Product"
                },
                "similar_product_id": {
                    "type": "string"
                },
                "similarity_score": {
                    "type": "number"
                }
            }
        },
        "models.ProductSuggestion": {
            "type": "object",
            "properties": {
                "generated_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "model_version": {
                    "type": "string"
                },
                "product": {
                    "$ref": "#/definitions/models.Product"
                },
                "product_id": {
                    "type": "string"
                },
                "reason": {
                    "type": "string"
                },
                "suggested_price_max": {
                    "type": "number"
                },
                "suggested_price_min": {
                    "type": "number"
                },
                "suggested_tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "models.Recommendation": {
            "type": "object",
            "properties": {
                "age_based": {
                    "type": "boolean"
                },
                "based_on_comments": {
                    "type": "boolean"
                },
                "based_on_favorites": {
                    "type": "boolean"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "model_version": {
                    "type": "string"
                },
                "product": {
                    "$ref": "#/definitions/models.Product"
                },
                "product_id": {
                    "type": "string"
                },
                "reason": {
                    "type": "string"
                },
                "region_based": {
                    "type": "boolean"
                },
                "user": {
                    "$ref": "#/definitions/models.User"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "models.User": {
            "type": "object",
            "properties": {
                "birth_year": {
                    "type": "integer"
                },
                "comment_votes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.CommentVote"
                    }
                },
                "comments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Comment"
                    }
                },
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "favorites": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Favorite"
                    }
                },
                "http_request_logs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.HttpRequestLog"
                    }
                },
                "id": {
                    "type": "string"
                },
                "is_admin": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "recommendations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Recommendation"
                    }
                },
                "region": {
                    "type": "string"
                },
                "user_events": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.UserEvent"
                    }
                }
            }
        },
        "models.UserEvent": {
            "type": "object",
            "properties": {
                "event_type": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": true
                },
                "product": {
                    "$ref": "#/definitions/models.Product"
                },
                "product_id": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/models.User"
                },
                "user_id": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "Type \"Bearer\" followed by a space and JWT token.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    },
    "tags": [
        {
            "description": "User authentication and profile management",
            "name": "Authentication"
        },
        {
            "description": "Product category management",
            "name": "Categories"
        },
        {
            "description": "Product management with advanced search and ML suggestions",
            "name": "Products"
        },
        {
            "description": "Product reviews and comments with voting system",
            "name": "Comments"
        },
        {
            "description": "User favorites management",
            "name": "Favorites"
        },
        {
            "description": "ML-powered personalized product recommendations",
            "name": "Recommendations"
        },
        {
            "description": "ML-generated product optimization suggestions",
            "name": "Product Suggestions"
        }
    ]
}